{:paths ["src/clj" "test"]
 :deps {com.fingerhutpress.cljol_jvm_support/cljol_jvm_support {:mvn/version "1.0"}
        medley/medley {:mvn/version "1.2.0"}
        ;; This version of dorothy library has a small fix for
        ;; this issue: https://github.com/daveray/dorothy/issues/18
        dorothy/dorothy {:git/url "https://github.com/daveray/dorothy"
                         :sha "207570804dfda2162a15b9ee55b5e76ec6e1ecfa"}
        ;; This forked version of ubergraph library has a small update
        ;; to enable it to use dorothy version 0.7, which the forked
        ;; version above is based upon.  dorothy simply moved a couple
        ;; of functions to a different namespace, which changes how
        ;; ubergraph needs to call those functions.
        ubergraph/ubergraph {:git/url "https://github.com/jafingerhut/ubergraph"
                             :sha "df0d5498a4d833c3bfb70a6a39caa808b35692cc"}
        ;; This is the version of ubergraph depended upon by cljol
        ;; before the fix for the dorothy issue described above was
        ;; created.
        ;;{:mvn/version "0.8.2" :exclusions [tailrecursion/cljs-priority-map]}
        }
 :aliases
 {
  ;; Common alias to use for all Clojure/Java commands
  :clj {:jvm-opts ["-XX:-OmitStackTraceInFastThrow"]}

  ;; - start a Clojure/Java Socket REPL on port 50505:
  :socket
  {:jvm-opts
   ["-Dclojure.server.repl={:port,50505,:accept,clojure.core.server/repl}"]}

  ;; pull in specific versions of Clojure:
  ;; cljol uses Ubergraph, which uses Loom, and at least in the
  ;; current versions of those projects that cljol depends upon, Loom
  ;; uses .cljc files, which were new with Clojure 1.7.0.
  :1.7 {:override-deps {org.clojure/clojure {:mvn/version "1.7.0"}}}
  :1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
  :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
  :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.0"}}}
  :1.10.1 {:override-deps {org.clojure/clojure {:mvn/version "1.10.1"}}}
  :master {:override-deps {org.clojure/clojure {:mvn/version "1.11.0-master-SNAPSHOT"}}}

  ;; Extra dependency I found useful for getting a list of all classes
  ;; defined in a running JVM.  I used that to have lots of test cases
  ;; to compare the results of lists of object fields returned via
  ;; clojure.reflect/type-reflect vs. JOL's ClassData.  Except for a
  ;; few minor differences in class names, e.g. "$" characters instead
  ;; of ".", and "<>" instead of "[]" in array type names, they were
  ;; identical.
  :classgraph {:extra-deps {io.github.classgraph/classgraph
                            {:mvn/version "4.8.42"}}}
  :jamm {:extra-deps {com.clojure-goes-fast/clj-memory-meter
                      {:mvn/version "0.1.2"}}}
  :jammlocal {:extra-deps {com.clojure-goes-fast/clj-memory-meter
                           {:mvn/version "0.1.3-SNAPSHOT"}}}
  :eastwood {:extra-deps {jonase/eastwood {:mvn/version "0.3.5"}}
             :main-opts ["-m" "eastwood.lint"
                         "{:source-paths,[\"src/clj\"],:test-paths,[\"test\"],:add-linters,[:unused-fn-args,:unused-locals,:unused-namespaces,:unused-private-vars],:exclude-linters,[:implicit-dependencies],:exclude-namespaces,[cljol.jdk9-and-later]}"]}
  :loomlocal {:override-deps {aysylu/loom {:mvn/version "1.0.3-SNAPSHOT"}}}
  :uberlocal {:override-deps {ubergraph/ubergraph {:mvn/version "0.6.1-andy-mods"}}}
  :jollocal {:override-deps {org.openjdk.jol/jol-core {:mvn/version "0.9.1"}}}
  :generate {:extra-paths ["src/generate"]
             :extra-deps {org.clojure/data.int-map {:mvn/version "0.2.4"}}}
  :priv {:jvm-opts ["-Djdk.attach.allowAttachSelf" "-Djol.tryWithSudo=true"]}
  :priv2 {:jvm-opts ["-Djdk.attach.allowAttachSelf"]}
  :bigmem {:jvm-opts ["-Xms4g" "-Xmx8g"]}
  :cap {;; recommended options from README of
        ;; https://github.com/clojure-goes-fast/clj-async-profiler
        :jvm-opts ["-Djdk.attach.allowAttachSelf"
                   ;; I have trouble entering password for this from
                   ;; clj REPL.  Maybe clojure command instead of clj
                   ;; is better for this?
                   "-Djol.tryWithSudo=true"
                   "-XX:+UnlockDiagnosticVMOptions"
                   "-XX:+DebugNonSafepoints"]
        :extra-deps {com.clojure-goes-fast/clj-async-profiler
                     {:mvn/version "0.4.0"}}}
  :printcomp {:jvm-opts ["-XX:+PrintCompilation"]}
  :disablecompressedoops {:jvm-opts ["-XX:-UseCompressedOops"]}
  }
 }
